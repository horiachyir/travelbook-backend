# Generated by Django 5.2.4 on 2025-10-29 15:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Account name', max_length=255)),
                ('account_type', models.CharField(choices=[('checking', 'Checking Account'), ('savings', 'Savings Account'), ('cash', 'Cash'), ('credit-card', 'Credit Card'), ('investment', 'Investment'), ('other', 'Other')], default='checking', max_length=20)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, help_text='Last 4 digits or masked number', max_length=100, null=True)),
                ('currency', models.CharField(choices=[('CLP', 'Chilean Peso'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('BRL', 'Brazilian Real'), ('ARS', 'Argentine Peso')], default='CLP', max_length=3)),
                ('initial_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Expense name/description', max_length=255)),
                ('expense_type', models.CharField(choices=[('fixed', 'Fixed'), ('variable', 'Variable')], default='variable', max_length=20)),
                ('category', models.CharField(choices=[('salary', 'Salary'), ('rent', 'Rent'), ('utilities', 'Utilities'), ('marketing', 'Marketing'), ('supplies', 'Supplies'), ('transportation', 'Transportation'), ('insurance', 'Insurance'), ('maintenance', 'Maintenance'), ('software', 'Software/Technology'), ('professional-services', 'Professional Services'), ('taxes', 'Taxes'), ('commission', 'Commission'), ('other', 'Other')], default='other', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Detailed description', null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Expense amount', max_digits=12)),
                ('currency', models.CharField(choices=[('CLP', 'Chilean Peso'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('BRL', 'Brazilian Real'), ('ARS', 'Argentine Peso')], default='CLP', max_length=3)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, choices=[('credit-card', 'Credit Card'), ('debit-card', 'Debit Card'), ('bank-transfer', 'Bank Transfer'), ('cash', 'Cash'), ('check', 'Check'), ('paypal', 'PayPal'), ('other', 'Other')], max_length=20, null=True)),
                ('payment_date', models.DateField(blank=True, help_text='When the expense was paid', null=True)),
                ('due_date', models.DateField(help_text='When the expense is due')),
                ('recurrence', models.CharField(choices=[('once', 'One-time'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='once', max_length=20)),
                ('recurrence_end_date', models.DateField(blank=True, help_text='When recurrence ends', null=True)),
                ('vendor', models.CharField(blank=True, help_text='Vendor or supplier name', max_length=255, null=True)),
                ('vendor_id_number', models.CharField(blank=True, help_text='Vendor ID or tax number', max_length=100, null=True)),
                ('invoice_number', models.CharField(blank=True, help_text='Invoice or receipt number', max_length=100, null=True)),
                ('receipt_file', models.FileField(blank=True, null=True, upload_to='financial/expenses/')),
                ('department', models.CharField(blank=True, help_text='Department or cost center', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, help_text='External reference or PO number', max_length=255, null=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_expenses', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-due_date', '-created_at'],
                'indexes': [models.Index(fields=['expense_type', 'payment_status'], name='financial_e_expense_44f2dd_idx'), models.Index(fields=['due_date'], name='financial_e_due_dat_461ec4_idx'), models.Index(fields=['payment_date'], name='financial_e_payment_16a729_idx'), models.Index(fields=['category'], name='financial_e_categor_09e4d2_idx')],
            },
        ),
    ]
